<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup Label="Globals">
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <!-- Use 19H1 SDK (10.0.18362.0)  Support running on RS3+ (10.0.16299.0) -->
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion>10.0.16299.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>

  <PropertyGroup Label="Configuration">
    <PlatformToolset>$(DefaultPlatformToolset)</PlatformToolset>
    <GenerateProjectSpecificOutputFolder>false</GenerateProjectSpecificOutputFolder>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>

  <PropertyGroup Label="Desktop">
    <!-- See https://docs.microsoft.com/en-us/cpp/porting/modifying-winver-and-win32-winnt -->
    <WinVer>_WIN32_WINNT_WIN8</WinVer>
  </PropertyGroup>

  <Import Project="$(ReactNativeWindowsDir)PropertySheets\ReactPatches.targets" />
  <Import Project="$(ReactNativeWindowsDir)\PropertySheets\JSEngine.Props" />
  <ImportGroup Label="Defaults">
    <Import Project="$(Platform).props" />
    <Import Project="$(Configuration).props" />
  </ImportGroup>

  <ImportGroup Label="ConfigurationType">
    <Import Project="$(ConfigurationType)\$(Platform).props" />
    <Import Project="$(ConfigurationType)\$(Configuration).props" />
  </ImportGroup>

  <ItemDefinitionGroup>
    <ClCompile>
      <!--
        BOOST_ALL_NO_LIB              - Don't require prebuilt Boost DateTime LIB.
        BOOST_ERROR_CODE_HEADER_ONLY  - Compile Boost error_code members inline. Requires BOOST_SYSTEM_SOURCE.
        BOOST_NO_RTTI                 - Configure Boost not to use dynamic_cast
        BOOST_NO_TYPEID               - Configure boost not to check typeid (not to use RTTI)
        BOOST_SYSTEM_SOURCE           - Build boost::system symbols from sources (drop dependency on boost_system.lib).
        GTEST_HAS_RTTI                - Let GTest know not to use RTTI
        WIN32_LEAN_AND_MEAN           - Reduce the Windows API included surface.
        WINRT_LEAN_AND_MEAN           - Disable rarely used cppwinrt templates that impact compile-time/PCH size.
      -->
      <PreprocessorDefinitions>
        _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS;
        BOOST_ALL_NO_LIB=1;
        BOOST_ERROR_CODE_HEADER_ONLY;
        BOOST_NO_RTTI;
        BOOST_NO_TYPEID;
        BOOST_SYSTEM_SOURCE;
        GTEST_HAS_RTTI=0;
        WIN32_LEAN_AND_MEAN;
        WINRT_LEAN_AND_MEAN;
        %(PreprocessorDefinitions)
      </PreprocessorDefinitions>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
  </ItemDefinitionGroup>

  <!--
    #4804: CxxFrameHandler4 leads to generated code that incompatible with VS
    2015 and 2017. Disable it until consumers are updated or on an ABI-safe API
  -->
  <ItemDefinitionGroup>
    <ClCompile>
      <AdditionalOptions>/d2FH4- %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <AdditionalOptions>/d2:-FH4- %(AdditionalOptions)</AdditionalOptions>
    </Link>
  </ItemDefinitionGroup>

  <ItemDefinitionGroup Condition="'$(ConfigurationType)' == 'Application' OR '$(ConfigurationType)' == 'DynamicLibrary'">
    <Link>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>

</Project>
